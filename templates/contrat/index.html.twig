{% extends 'base.html.twig' %}

{% block title %}Liste des Contrats{% endblock %}

{% block body %}
<div class="container py-5">
    <!-- Header with search and actions -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="mb-0 fw-bold">
                <i class="fas fa-file-contract text-primary me-2"></i>
                Gestion des Contrats
            </h1>
            <p class="text-muted mb-0">Liste de tous les contrats enregistrés</p>
        </div>
        <div>
            <a href="{{ path('app_contrat_new') }}" class="btn btn-primary shadow-sm">
                <i class="fas fa-plus me-2"></i>
                Nouveau Contrat
            </a>
        </div>
    </div>

    <!-- Search and filter section -->
    <div class="card shadow border-0 mb-4">
        <div class="card-body">
            <form id="filterForm" class="row g-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text bg-light">
                            <i class="fas fa-search text-primary"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control" placeholder="Rechercher un contrat...">
                    </div>
                </div>
                <div class="col-md-3">
                    <select id="dateFilter" class="form-select">
                        <option value="">Filtrer par date</option>
                        <option value="1">Dernier mois</option>
                        <option value="3">Derniers 3 mois</option>
                        <option value="12">Cette année</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select id="sortFilter" class="form-select">
                        <option value="">Trier par</option>
                        <option value="date-desc">Date (récent → ancien)</option>
                        <option value="date-asc">Date (ancien → récent)</option>
                        <option value="contract-num">Numéro de contrat</option>
                        <option value="id">ID</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="button" id="resetFilters" class="btn btn-outline-secondary w-100">
                        <i class="fas fa-undo me-1"></i> Reset
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Main table card -->
    <div class="card shadow border-0">
        <div class="card-header bg-white py-3">
            <div class="row align-items-center">
                <div class="col">
                    <h5 class="mb-0 fw-bold text-primary">
                        <i class="fas fa-list me-2"></i>
                        Liste des Contrats
                        <span id="resultCount" class="text-muted small ms-2"></span>
                    </h5>
                </div>
                <div class="col text-end">
                    <div class="dropdown">
                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-download me-1"></i>
                            Exporter
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="exportDropdown">
                            <li><a class="dropdown-item" href="#"><i class="fas fa-file-excel me-2 text-success"></i>Excel</a></li>
                            <li><a class="dropdown-item" href="#"><i class="fas fa-file-pdf me-2 text-danger"></i>PDF</a></li>
                            <li><a class="dropdown-item" href="#"><i class="fas fa-file-csv me-2 text-primary"></i>CSV</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="bg-light">
                        <tr>
                            <th class="ps-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="selectAll">
                                    <label class="form-check-label" for="selectAll"></label>
                                </div>
                            </th>
                            <th>
                                <a href="#" class="text-decoration-none text-dark sort-header" data-sort="id">
                                    ID
                                    <i class="fas fa-sort ms-1 text-muted small"></i>
                                </a>
                            </th>
                            <th>
                                <a href="#" class="text-decoration-none text-dark sort-header" data-sort="numContrat">
                                    N° de Contrat
                                    <i class="fas fa-sort ms-1 text-muted small"></i>
                                </a>
                            </th>
                            <th>
                                <a href="#" class="text-decoration-none text-dark sort-header" data-sort="reference">
                                    Référence
                                    <i class="fas fa-sort ms-1 text-muted small"></i>
                                </a>
                            </th>
                            <th>
                                <a href="#" class="text-decoration-none text-dark sort-header" data-sort="dateEnregistrement">
                                    Date d'Enregistrement
                                    <i class="fas fa-sort-down ms-1 text-primary small"></i>
                                </a>
                            </th>
                            <th>N° d'Enregistrement</th>
                            <th class="text-center">Équipements</th>
                            <th class="text-end pe-3">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="contractsTableBody">
                    {% for contrat in contrats %}
                        <tr class="contract-row" 
                            data-id="{{ contrat.id }}"
                            data-contract-num="{{ contrat.numContrat|lower }}"
                            data-reference="{{ contrat.reference|lower }}"
                            data-registration-num="{{ contrat.numEnregistrement|lower }}"
                            data-date="{{ contrat.dateEnregistrement ? contrat.dateEnregistrement|date('Y-m-d') : '' }}"
                            data-equip-count="{{ contrat.equipements|length }}">
                            <td class="ps-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="{{ contrat.id }}" id="check{{ contrat.id }}">
                                    <label class="form-check-label" for="check{{ contrat.id }}"></label>
                                </div>
                            </td>
                            <td>
                                <span class="fw-bold">{{ contrat.id }}</span>
                            </td>
                            <td>
                                <span class="fw-medium">{{ contrat.numContrat }}</span>
                            </td>
                            <td>
                                <span class="badge bg-light text-dark border">{{ contrat.reference }}</span>
                            </td>
                            <td>
                                {% if contrat.dateEnregistrement %}
                                    <div>
                                        <i class="far fa-calendar-alt text-primary me-1"></i>
                                        <span>{{ contrat.dateEnregistrement|date('d/m/Y') }}</span>
                                    </div>
                                    <small class="text-muted">{{ contrat.dateEnregistrement|date('H:i') }}</small>
                                {% else %}
                                    <span class="text-muted fst-italic">Non définie</span>
                                {% endif %}
                            </td>
                            <td>
                                <span class="font-monospace">{{ contrat.numEnregistrement }}</span>
                            </td>
                            <td class="text-center">
                                {% set equipCount = contrat.equipements|length %}
                                <span class="badge bg-info rounded-pill">{{ equipCount }}</span>
                            </td>
                            
                            <td class="text-end pe-3">
                                <div class="btn-group">
                                    <a href="{{ path('app_contrat_show', {'id': contrat.id}) }}" class="btn btn-sm btn-outline-primary" title="Voir les détails">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="{{ path('app_contrat_edit', {'id': contrat.id}) }}" class="btn btn-sm btn-outline-warning" title="Modifier">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button type="button" class="btn btn-sm btn-outline-danger" title="Supprimer" data-bs-toggle="modal" data-bs-target="#deleteModal{{ contrat.id }}">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>

                                <!-- Delete Modal for each contract -->
                                <div class="modal fade" id="deleteModal{{ contrat.id }}" tabindex="-1" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header bg-danger text-white">
                                                <h5 class="modal-title">Confirmation de suppression</h5>
                                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <p>Êtes-vous sûr de vouloir supprimer le contrat <strong>{{ contrat.numContrat }}</strong> ?</p>
                                                <p class="text-danger"><i class="fas fa-exclamation-triangle me-2"></i>Cette action est irréversible.</p>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                                                <form method="post" action="{{ path('app_contrat_delete', {'id': contrat.id}) }}" style="display: inline-block;">
                                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ contrat.id) }}">
                                                    <button class="btn btn-danger">Confirmer la suppression</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr id="noResultsRow">
                            <td colspan="8" class="text-center py-5">
                                <div class="py-5">
                                    <i class="fas fa-folder-open text-muted" style="font-size: 3rem;"></i>
                                    <h5 class="mt-3">Aucun contrat trouvé</h5>
                                    <p class="text-muted">Commencez par créer un nouveau contrat</p>
                                    <a href="{{ path('app_contrat_new') }}" class="btn btn-primary mt-2">
                                        <i class="fas fa-plus me-2"></i>Créer un contrat
                                    </a>
                                </div>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer bg-white">
            <div class="row align-items-center">
                <div class="col">
                    <small class="text-muted" id="paginationInfo">Affichage de <strong>1-10</strong> sur <strong>24</strong> contrats</small>
                </div>
                <div class="col">
                    <nav aria-label="Page navigation">
                        <ul class="pagination pagination-sm justify-content-end mb-0">
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Précédent</a>
                            </li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item">
                                <a class="page-link" href="#">Suivant</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>

    <!-- Bulk action toolbar -->
    <div class="position-fixed bottom-0 start-0 p-3 w-100 bg-white border-top shadow-lg" style="z-index: 1030; display: none;" id="bulkActionBar">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <span class="me-3"><strong id="selectedCount">0</strong> contrats sélectionnés</span>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-primary">
                        <i class="fas fa-file-export me-1"></i> Exporter
                    </button>
                    <button type="button" class="btn btn-outline-danger">
                        <i class="fas fa-trash me-1"></i> Supprimer
                    </button>
                    <button type="button" class="btn btn-outline-secondary" id="cancelSelection">
                        <i class="fas fa-times me-1"></i> Annuler
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Elements
    const selectAllCheckbox = document.getElementById('selectAll');
    const checkboxes = document.querySelectorAll('tbody .form-check-input');
    const bulkActionBar = document.getElementById('bulkActionBar');
    const selectedCountElement = document.getElementById('selectedCount');
    const cancelSelectionButton = document.getElementById('cancelSelection');
    
    // Filter elements
    const searchInput = document.getElementById('searchInput');
    const dateFilter = document.getElementById('dateFilter');
    const sortFilter = document.getElementById('sortFilter');
    const resetFiltersBtn = document.getElementById('resetFilters');
    const contractRows = document.querySelectorAll('.contract-row');
    const resultCount = document.getElementById('resultCount');
    const paginationInfo = document.getElementById('paginationInfo');
    
    let currentSort = { field: '', direction: 'asc' };

    // Bulk selection functionality
    if (selectAllCheckbox) {
        selectAllCheckbox.addEventListener('change', function() {
            const visibleCheckboxes = Array.from(checkboxes).filter(checkbox => {
                const row = checkbox.closest('.contract-row');
                return row && row.style.display !== 'none';
            });
            
            visibleCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
            updateBulkActionBar();
        });
    }

    checkboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            updateSelectAllState();
            updateBulkActionBar();
        });
    });

    if (cancelSelectionButton) {
        cancelSelectionButton.addEventListener('click', function() {
            selectAllCheckbox.checked = false;
            checkboxes.forEach(checkbox => {
                checkbox.checked = false;
            });
            updateBulkActionBar();
        });
    }

    function updateBulkActionBar() {
        const selectedCheckboxes = Array.from(checkboxes).filter(checkbox => checkbox.checked);
        const selectedCount = selectedCheckboxes.length;
        
        if (selectedCount > 0) {
            bulkActionBar.style.display = 'block';
            selectedCountElement.textContent = selectedCount;
        } else {
            bulkActionBar.style.display = 'none';
        }
    }

    function updateSelectAllState() {
        const visibleCheckboxes = Array.from(checkboxes).filter(checkbox => {
            const row = checkbox.closest('.contract-row');
            return row && row.style.display !== 'none';
        });
        
        const checkedVisibleCheckboxes = visibleCheckboxes.filter(checkbox => checkbox.checked);
        
        if (visibleCheckboxes.length === 0) {
            selectAllCheckbox.indeterminate = false;
            selectAllCheckbox.checked = false;
        } else if (checkedVisibleCheckboxes.length === visibleCheckboxes.length) {
            selectAllCheckbox.indeterminate = false;
            selectAllCheckbox.checked = true;
        } else if (checkedVisibleCheckboxes.length > 0) {
            selectAllCheckbox.indeterminate = true;
            selectAllCheckbox.checked = false;
        } else {
            selectAllCheckbox.indeterminate = false;
            selectAllCheckbox.checked = false;
        }
    }

    // Search and filter functionality
    function filterContracts() {
        const searchTerm = searchInput.value.toLowerCase().trim();
        const dateFilterValue = dateFilter.value;
        let visibleCount = 0;

        contractRows.forEach(row => {
            let showRow = true;

            // Search filter
            if (searchTerm) {
                const contractNum = row.dataset.contractNum || '';
                const reference = row.dataset.reference || '';
                const registrationNum = row.dataset.registrationNum || '';
                const id = row.dataset.id || '';

                const searchableText = `${contractNum} ${reference} ${registrationNum} ${id}`;
                showRow = searchableText.includes(searchTerm);
            }

            // Date filter
            if (showRow && dateFilterValue) {
                const rowDate = row.dataset.date;
                if (rowDate) {
                    const contractDate = new Date(rowDate);
                    const today = new Date();
                    const monthsAgo = new Date();
                    monthsAgo.setMonth(today.getMonth() - parseInt(dateFilterValue));

                    showRow = contractDate >= monthsAgo;
                } else {
                    showRow = false;
                }
            }

            // Show/hide row
            row.style.display = showRow ? '' : 'none';
            if (showRow) visibleCount++;

            // Uncheck hidden rows
            if (!showRow) {
                const checkbox = row.querySelector('.form-check-input');
                if (checkbox) checkbox.checked = false;
            }
        });

        // Update result count
        resultCount.textContent = `(${visibleCount} résultats)`;
        
        // Update pagination info
        paginationInfo.innerHTML = `Affichage de <strong>1-${visibleCount}</strong> sur <strong>${visibleCount}</strong> contrats`;

        // Update select all state
        updateSelectAllState();
        updateBulkActionBar();

        // Show no results message if needed
        const noResultsRow = document.getElementById('noResultsRow');
        if (noResultsRow) {
            noResultsRow.style.display = visibleCount === 0 ? '' : 'none';
        }
    }

    function sortContracts(field, direction = 'asc') {
        const tbody = document.getElementById('contractsTableBody');
        const rowsArray = Array.from(contractRows);

        rowsArray.sort((a, b) => {
            let aValue, bValue;

            switch (field) {
                case 'id':
                    aValue = parseInt(a.dataset.id) || 0;
                    bValue = parseInt(b.dataset.id) || 0;
                    break;
                case 'numContrat':
                    aValue = a.dataset.contractNum || '';
                    bValue = b.dataset.contractNum || '';
                    break;
                case 'reference':
                    aValue = a.dataset.reference || '';
                    bValue = b.dataset.reference || '';
                    break;
                case 'dateEnregistrement':
                    aValue = new Date(a.dataset.date || '1970-01-01');
                    bValue = new Date(b.dataset.date || '1970-01-01');
                    break;
                case 'equipCount':
                    aValue = parseInt(a.dataset.equipCount) || 0;
                    bValue = parseInt(b.dataset.equipCount) || 0;
                    break;
                default:
                    return 0;
            }

            if (aValue < bValue) return direction === 'asc' ? -1 : 1;
            if (aValue > bValue) return direction === 'asc' ? 1 : -1;
            return 0;
        });

        // Re-append sorted rows
        rowsArray.forEach(row => tbody.appendChild(row));

        // Update sort indicators
        document.querySelectorAll('.sort-header i').forEach(icon => {
            icon.className = 'fas fa-sort ms-1 text-muted small';
        });

        const activeHeader = document.querySelector(`[data-sort="${field}"] i`);
        if (activeHeader) {
            activeHeader.className = `fas fa-sort-${direction === 'asc' ? 'up' : 'down'} ms-1 text-primary small`;
        }
    }

    // Event listeners for search and filters
    searchInput.addEventListener('input', filterContracts);
    dateFilter.addEventListener('change', filterContracts);

    sortFilter.addEventListener('change', function() {
        const value = this.value;
        if (!value) return;

        switch (value) {
            case 'date-desc':
                sortContracts('dateEnregistrement', 'desc');
                break;
            case 'date-asc':
                sortContracts('dateEnregistrement', 'asc');
                break;
            case 'contract-num':
                sortContracts('numContrat', 'asc');
                break;
            case 'id':
                sortContracts('id', 'asc');
                break;
        }
    });

    // Sort header click events
    document.querySelectorAll('.sort-header').forEach(header => {
        header.addEventListener('click', function(e) {
            e.preventDefault();
            const field = this.dataset.sort;
            const direction = currentSort.field === field && currentSort.direction === 'asc' ? 'desc' : 'asc';
            
            currentSort = { field, direction };
            sortContracts(field, direction);
            
            // Reset sort filter dropdown
            sortFilter.value = '';
        });
    });

    // Reset filters
    resetFiltersBtn.addEventListener('click', function() {
        searchInput.value = '';
        dateFilter.value = '';
        sortFilter.value = '';
        
        contractRows.forEach(row => {
            row.style.display = '';
        });

        const totalCount = contractRows.length;
        resultCount.textContent = '';
        paginationInfo.innerHTML = `Affichage de <strong>1-${totalCount}</strong> sur <strong>${totalCount}</strong> contrats`;

        // Reset sort indicators
        document.querySelectorAll('.sort-header i').forEach(icon => {
            icon.className = 'fas fa-sort ms-1 text-muted small';
        });

        updateSelectAllState();
        updateBulkActionBar();
    });

    // Initialize
    const totalCount = contractRows.length;
    if (totalCount > 0) {
        paginationInfo.innerHTML = `Affichage de <strong>1-${totalCount}</strong> sur <strong>${totalCount}</strong> contrats`;
    }
});


</script>
{% endblock %}

